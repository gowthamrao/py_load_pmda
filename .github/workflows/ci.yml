name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Check if lock file is up to date
      working-directory: ./py-load-pmda
      run: poetry check --lock

    - name: Install dependencies
      working-directory: ./py-load-pmda
      run: poetry install --no-interaction

    - name: Run tests
      working-directory: ./py-load-pmda
      run: poetry run pytest

  test-macos:
    runs-on: macos-latest
    needs: test-ubuntu
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Start Docker Desktop
      uses: crazy-max/ghaction-docker-desktop@v1
      with:
        start: true

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Check if lock file is up to date
      working-directory: ./py-load-pmda
      run: poetry check --lock

    - name: Install dependencies
      working-directory: ./py-load-pmda
      run: poetry install --no-interaction

    - name: Run tests
      working-directory: ./py-load-pmda
      run: poetry run pytest

  test-windows:
    runs-on: windows-latest
    needs: test-macos
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Check if lock file is up to date
      working-directory: ./py-load-pmda
      run: poetry check --lock

    - name: Install dependencies
      working-directory: ./py-load-pmda
      run: poetry install --no-interaction

    - name: Run tests
      working-directory: ./py-load-pmda
      run: poetry run pytest
