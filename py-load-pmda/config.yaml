# Configuration file for py-load-pmda
#
# This file contains settings for the database connection and for each
# dataset to be processed. Settings can be overridden by environment variables.

logging:
  # The logging level for the application.
  # Can be overridden by the PMDA_LOG_LEVEL environment variable.
  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: "INFO"

database:
  # The type of database adapter to use. 'postgres' is the default.
  type: "postgres"

  # Connection details for the target database.
  # These settings can be overridden by environment variables.
  # For local development, create a `.env` file in the project root and add:
  # PMDA_DB_HOST=localhost
  # PMDA_DB_PORT=5432
  # PMDA_DB_USER=your_user
  # PMDA_DB_PASSWORD=your_password
  # PMDA_DB_DBNAME=pmda_db
  #
  # The password is intentionally omitted from this file for security.
  # It MUST be provided via the PMDA_DB_PASSWORD environment variable.
  host: "localhost"
  port: 5432
  user: "admin"
  dbname: "pmda_db"

datasets:
  approvals:
    # Class names for the ETL components for this dataset
    extractor: "ApprovalsExtractor"
    parser: "ApprovalsParser"
    transformer: "ApprovalsTransformer"

    # Target table and schema in the database
    table_name: "pmda_approvals"
    schema_name: "public"

    # Load strategy configuration
    load_mode: "overwrite" # or "append", "merge"
    primary_key: ["approval_id"] # for merge mode

  jader:
    extractor: "JaderExtractor"
    parser: "JaderParser"
    transformer: "JaderTransformer"
    schema_name: "public"
    load_mode: "merge" # Changed from "append" to "merge"
    # The JADER dataset is normalized into four tables.
    # The transformer produces a dictionary of DataFrames, where keys match table names.
    # Primary keys are defined for each table to enable merge (upsert) operations.
    tables:
      jader_demo:
        primary_key: ["identification_number"]
      jader_drug:
        primary_key: ["drug_id"]
      jader_reac:
        primary_key: ["reac_id"]
      jader_hist:
        primary_key: ["hist_id"]

  package_inserts:
    extractor: "PackageInsertsExtractor"
    parser: "PackageInsertsParser"
    transformer: "PackageInsertsTransformer"
    table_name: "pmda_package_inserts"
    schema_name: "public"
    load_mode: "merge"
    primary_key: ["document_id"]
    columns:
      document_id: "VARCHAR(64)"
      raw_data_full: "JSONB"
      _meta_source_url: "TEXT"
      _meta_extraction_ts_utc: "TIMESTAMPTZ"
      _meta_load_ts_utc: "TIMESTAMPTZ"
      _meta_pipeline_version: "VARCHAR(50)"
      _meta_source_content_hash: "VARCHAR(64)"

  review_reports:
    extractor: "ReviewReportsExtractor"
    parser: "ReviewReportsParser"
    transformer: "ReviewReportsTransformer"
    table_name: "pmda_review_reports"
    schema_name: "public"
    load_mode: "merge"
    primary_key: ["document_id"]
    columns:
      # Structured data extracted from the report
      document_id: "VARCHAR(64)"
      brand_name_jp: "TEXT"
      generic_name_jp: "TEXT"
      applicant_name_jp: "TEXT"
      application_date: "DATE"
      approval_date: "DATE"
      review_summary_text: "TEXT"

      # High-fidelity raw data and metadata for auditability
      raw_data_full: "JSONB"
      _meta_source_url: "TEXT"
      _meta_extraction_ts_utc: "TIMESTAMPTZ"
      _meta_load_ts_utc: "TIMESTAMPTZ"
      _meta_pipeline_version: "VARCHAR(50)"
      _meta_source_content_hash: "VARCHAR(64)"
