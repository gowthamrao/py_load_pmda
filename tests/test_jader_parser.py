import pytest
from pathlib import Path
import pandas as pd

from py_load_pmda.parser import JaderParser

@pytest.fixture
def jader_zip_fixture():
    """Provides the path to the dummy JADER zip file."""
    # Note: This file is generated by prepare_test_fixtures.py
    path = Path("tests/fixtures/dummy_jader.zip")
    if not path.exists():
        pytest.fail(
            "dummy_jader.zip not found. "
            "Run `poetry run python prepare_test_fixtures.py` to create it."
        )
    return path

def test_jader_parser(jader_zip_fixture):
    """
    Tests that the JaderParser correctly parses the dummy zip file.
    """
    parser = JaderParser()

    # The parser expects a list of paths
    dataframes = parser.parse([jader_zip_fixture])

    # 1. Check that all four dataframes are present
    assert "case" in dataframes
    assert "demo" in dataframes
    assert "drug" in dataframes
    assert "reac" in dataframes

    # 2. Check the content of each dataframe
    case_df = dataframes["case"]
    assert not case_df.empty
    assert list(case_df.columns) == ["識別番号", "報告回数"]
    assert case_df["識別番号"].iloc[0] == 1

    drug_df = dataframes["drug"]
    assert not drug_df.empty
    assert "医薬品（一般名）" in drug_df.columns
    # Verify that the Japanese text was decoded correctly from Shift-JIS
    assert drug_df["医薬品（一般名）"].iloc[1] == "テスト薬"

    reac_df = dataframes["reac"]
    assert not reac_df.empty
    assert "有害事象" in reac_df.columns
    assert reac_df["有害事象"].iloc[1] == "強い副作用"
